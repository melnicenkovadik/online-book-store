"use client";
import Link from "next/link";
import useSWR from "swr";
import { AdminApi } from "@/services/admin";
import type { Category } from "@/types/catalog";
import styles from "../products/products.module.scss";

export default function AdminCategoriesListPage() {
  const { data, mutate, isLoading } = useSWR("admin/categories", () =>
    AdminApi.listCategories(),
  );

  const onDelete = async (id: string) => {
    if (!confirm("–í–∏–¥–∞–ª–∏—Ç–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é?")) return;
    await AdminApi.deleteCategory(id);
    mutate();
  };

  return (
    <div className={styles.container}>
      <div className={styles.header}>
        <h1 className={styles.title}>–ö–∞—Ç–µ–≥–æ—Ä—ñ—ó</h1>
        <Link href="/admin/categories/new" className={styles.addButton}>
          <span>+</span> –î–æ–¥–∞—Ç–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é
        </Link>
      </div>

      <div className={styles.tableWrapper}>
        <table className={styles.table}>
          <thead>
            <tr>
              <th className={styles.th}>–ù–∞–∑–≤–∞</th>
              <th className={styles.th}>Slug</th>
              <th className={styles.th}>–ë–∞—Ç—å–∫—ñ–≤—Å—å–∫–∞</th>
              <th className={styles.th}>–î—ñ—ó</th>
            </tr>
          </thead>
          <tbody>
            {isLoading && (
              <tr>
                <td colSpan={4} className={styles.td}>
                  –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è‚Ä¶
                </td>
              </tr>
            )}
            {data?.map((c: Category) => (
              <tr key={c.id}>
                <td className={styles.td}>{c.name}</td>
                <td className={styles.td}>{c.slug}</td>
                <td className={styles.td}>
                  {data.find((p: Category) => p.id === c.parentId)?.name || "‚Äî"}
                </td>
                <td className={styles.td}>
                  <div className={styles.actions}>
                    <Link
                      href={`/admin/categories/${c.id}`}
                      className={styles.iconButton}
                      title="–†–µ–¥–∞–≥—É–≤–∞—Ç–∏"
                    >
                      ‚úèÔ∏è
                    </Link>
                    <button
                      type="button"
                      onClick={() => onDelete(c.id)}
                      className={styles.iconButton}
                      title="–í–∏–¥–∞–ª–∏—Ç–∏"
                    >
                      üóëÔ∏è
                    </button>
                  </div>
                </td>
              </tr>
            ))}
            {!isLoading && data?.length === 0 && (
              <tr>
                <td colSpan={4} className={styles.tdEmpty}>
                  –ö–∞—Ç–µ–≥–æ—Ä—ñ–π –Ω–µ–º–∞—î
                </td>
              </tr>
            )}
          </tbody>
        </table>
      </div>

      <div className={styles.info}>–í—Å—å–æ–≥–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ–π: {data?.length || 0}</div>
    </div>
  );
}
